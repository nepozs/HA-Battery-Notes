{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Battery Notes for Home Assistant","text":"<p>Integration to add battery notes to a device, with automatic discovery via a growing battery library for devices. Track the battery type, when the battery was replaced and also when a battery is low based on device or global thresholds.  </p> <p>Please  this repo on GitHub if you find it useful If you want to show your support please</p> <p></p>"},{"location":"#features","title":"Features","text":"<p>The integration will add additional diagnostic entities to your device.</p> <p></p> <ul> <li>Entities</li> <li>Services</li> <li>Events</li> </ul>"},{"location":"#how-to-use-battery-notes","title":"How to use Battery Notes","text":"<p>Once you have installed the integration you will hopefully have some devices discovered and you can follow the Notification to confirm their details and add them, if you don't have devices discovered you can add them manually.</p> <p></p>"},{"location":"#to-add-a-battery-note-manually","title":"To add a battery note manually","text":"<ul> <li>Go to Settings/Integrations and click Add Integration.</li> <li>Select Battery Notes.</li> <li>Choose your device from the drop down and click next.</li> <li>Enter the battery type and quantity and optionally a battery low threshold and click submit.</li> </ul> <p>Info</p> <p>The library is updated automatically with new devices approximately every 24 hours from starting Home Assistant, if you have added a device to the library using this form then this will take about a day to be discovered once it's approved and added.</p>"},{"location":"#community-contributions","title":"Community Contributions","text":"<p>A collection of community contributions can be found on the community contributions page. </p>"},{"location":"#faq","title":"FAQ","text":"<p>Before raising anything, please read through the faq. If you have questions, then you can raise a discussion. If you have found a bug or have a feature request please raise it using the appropriate report template.</p>"},{"location":"community/","title":"Community Contributions","text":""},{"location":"community/#ui","title":"UI","text":""},{"location":"community/#battery-state-card","title":"Battery State Card","text":"<p>Using the excellent Battery State Card by maxwroc you can easily display devices with their batteries required where the devices battery threshold indicates it's low and show be replaced.</p> <pre><code>type: custom:battery-state-card\nsecondary_info: '{attributes.battery_type_and_quantity}'\nround: 0\nfilter:\n  include:\n    - name: entity_id\n      value: '*_battery_plus'\n  exclude:\n    - name: attributes.battery_low\n      value: false\nbulk_rename:\n  - from: \"Battery+\"      \nsort:\n  - state\n</code></pre>"},{"location":"community/#automations","title":"Automations","text":""},{"location":"community/#battery-low-notification","title":"Battery Low Notification","text":"<p>Raise a persistent notification when a battery is low, dismiss when it's not low</p> <pre><code>alias: Battery Low Notification\ndescription: Battery Low Notification with auto dismiss\ntrigger:\n  - platform: event\n    event_type: battery_notes_battery_threshold\n    event_data:\n      battery_low: true\n    id: low\n    alias: Battery went low\n  - platform: event\n    event_type: battery_notes_battery_threshold\n    event_data:\n      battery_low: false\n    id: high\n    alias: Battery went high\ncondition: []\naction:\n  - choose:\n      - conditions:\n          - condition: trigger\n            id:\n              - low\n        sequence:\n          - service: persistent_notification.create\n            data:\n              title: |\n                {{ trigger.event.data.device_name }} Battery Low\n              notification_id: \"{{ trigger.event.data.device_id }}\"\n              message: &gt;\n                The device has a battery level of {{\n                trigger.event.data.battery_level }}% {{ '\\n' -}} You need {{\n                trigger.event.data.battery_quantity }}x {{\n                trigger.event.data.battery_type }}\n      - conditions:\n          - condition: trigger\n            id:\n              - high\n        sequence:\n          - service: persistent_notification.dismiss\n            data:\n              notification_id: \"{{ trigger.event.data.device_id }}\"\nmode: queued\n</code></pre>"},{"location":"community/#battery-replaced","title":"Battery Replaced","text":"<p>Mark a battery as replaced when there is an increase in battery level.</p> <pre><code>alias: Battery Replaced\ndescription: Battery Replaced\ntrigger:\n  - platform: event\n    event_type: battery_notes_battery_increased\ncondition: []\naction:\n  - service: battery_notes.set_battery_replaced\n    data:\n      device_id: \"{{ trigger.event.data.device_id }}\"\nmode: queued\n</code></pre>"},{"location":"community/#automation-tips","title":"Automation Tips","text":"<p>To call the battery replaced service from an entity trigger you will need the device_id, here's an easy way to get this</p> <pre><code>action:\n  - service: battery_notes.set_battery_replaced\n    data:\n      device_id: \"{{ device_id(trigger.entity_id) }}\"\n</code></pre>"},{"location":"community/#blueprints","title":"Blueprints","text":"<p>Blueprints are an excellent way to get you up and running with the integration quickly. They can also be used as a guide for setting up new automations which you can tailor to your needs. </p>"},{"location":"community/#battery-threshold","title":"Battery Threshold","text":"<p>Install blueprint | Source</p> <p>This blueprint will allow notifications to be raised and/or custom actions to be performed when the battery threshold is met. It is extended from the example Battery Low Notification automation yaml above for those who'd prefer an easy way to get started.</p>"},{"location":"community/#battery-replaced_1","title":"Battery Replaced","text":"<p>Install blueprint | Source</p> <p>This blueprint will automatically update the battery replaced sensor and custom actions to be performed when the battery increases. It is extended from the example Battery Replaced automation yaml above for those who'd prefer an easy way to get started.</p>"},{"location":"community/#contributing","title":"Contributing","text":"<p>If you want to contribute then fork the repository, edit this page which is in the docs folder and submit a pull request.</p>"},{"location":"configuration/","title":"Configuration","text":"<p>You can add these options to change the default behaviour of Battery Notes by adding them to your Home Assistant configuration.yaml under the battery_notes: property, like so:</p> <pre><code>battery_notes:\n  enable_autodiscovery: true\n  show_all_devices: false\n  enable_replaced: true\n  default_battery_low_threshold: 10\n  battery_increase_threshold: 25\n  hide_battery: false\n  round_battery: false\n</code></pre> <p>A restart of Home Assistant is required for the changed to take effect.</p> Name Type Requirement Default Description enable_autodiscovery Boolean Optional True If set to true will automatically match devices against the library and create a setup flow within the integrations page. show_all_devices Boolean Optional False If set to true will show all devices in the manual add dropdown, rather than just those with batteries. enable_replaced Boolean Optional True If set to false new devices added to battery notes will have the battery replaced sensor and button disabled.  Any devices you have previously added to Battery Notes you will have to disable these sensors manually, which also means you can enable specific sensors of important ones you want to track. default_battery_low_threshold Int Optional 10 The default threshold where a devices battery_low entity is set to true and the battery_notes_battery_threshold event is fired, can be overriden per device in device configuration. battery_increase_threshold Int Optional 25 The threshold where the battery_notes_battery_increased event is fired, use this event for battery replaced automations. The threshold is the difference in increase between previous and current battery level. hide_battery Boolean Optional False Hide the standard battery when adding Battery+. This will not effect existing dashboards, automations etc. round_battery Boolean Optional False Round battery+ to whole percentages. user_library String Optional If specified then a user library file will be searched prior to the main library, the user library must be in the same format as the library and placed in the same folder. Only really used for dev purposes."},{"location":"configuration/#debug-logging","title":"Debug Logging","text":"<p>To analyse issues on your installation it might be helpful to enable debug logging.</p> <p>You can enable debug logging by going to the Battery Notes integration page. You can use the button below.</p> <p></p> <p>Next click <code>Enable debug logging</code></p> <p>Alternatively</p> <p>Add the following to configuration.yaml:</p> <pre><code>    logger:\n      default: warning\n      logs:\n        custom_components.battery_notes: debug\n</code></pre>"},{"location":"entities/","title":"Entities","text":"<p>You'll get the following entities for each device you have added to battery notes.</p>"},{"location":"entities/#battery","title":"Battery+","text":"<p><code>sensor.{{device_name}}_battery_plus</code></p> <p>An enhanced battery sensor that duplicates the normal battery but with additional attributes specific to battery notes. Use the battery+ sensor on dashboards with secondary information fields/templates etc to display battery notes specific details along with the battery level. The original battery can optionally be hidden by adding a configuration setting.</p> <p>See how to use this entity in the community contributions</p> Attribute Type Description <code>battery_quantity</code> <code>int</code> The quantity of batteries <code>battery_type</code> <code>string</code> The type of batteries <code>battery_type_and_quantity</code> <code>string</code> The type of batteries with the quantity if more than 1 <code>battery_last_replaced</code> <code>string</code> The date and time the battery was last replaced <code>battery_low</code> <code>bool</code> An indicator of whether the battery is low based on the device or global threshold <code>battery_low_threshold</code> <code>int</code> The device or global threshold for when the battery is low <code>battery_last_reported</code> <code>datetime</code> The datetime when the battery level was last reported <code>battery_last_reported_level</code> <code>float</code> The level when the battery was last reported"},{"location":"entities/#battery-type","title":"Battery Type","text":"<p><code>sensor.{{device_name}}_battery_type</code></p> <p>The battery quantity and type display in an easy to use single entity.  The quantity is only shown if more than 1.</p> Attribute Type Description <code>battery_quantity</code> <code>int</code> The quantity of batteries <code>battery_type</code> <code>string</code> The type of batteries"},{"location":"entities/#battery-last-replaced","title":"Battery Last Replaced","text":"<p><code>sensor.{{device_name}}_battery_last_replaced</code></p> <p>The last time the battery of the device was replaced.</p>"},{"location":"entities/#battery-replaced","title":"Battery Replaced","text":"<p><code>button.{{device_name}}_battery_replaced</code></p> <p>A button to set the battery_last_replaced entity to now.</p>"},{"location":"entities/#battery-low","title":"Battery Low","text":"<p><code>sensor.{{device_name}}_battery_plus_low</code></p> <p>A boolean sensor indicating if the battery is low, true when the battery is below the device or global threshold.</p> Attribute Type Description <code>battery_low_threshold</code> <code>int</code> The device or global threshold for when the battery is low."},{"location":"events/","title":"Events","text":"<p>The following events are raised by the integration. These events can be used within automations.</p>"},{"location":"events/#battery-threshold","title":"Battery Threshold","text":"<p><code>battery_notes_battery_threshold</code></p> <p>This is fired when any device within Battery Notes has a battery level changed to either below or above the device specific or global threshold.</p> <p>You can use this to send notifications in your preferred method.  An example automation below displays a persistent notification.  </p> Attribute Type Description <code>device_id</code> <code>string</code> The device id of the device. <code>device_name</code> <code>string</code> The device name. <code>battery_low</code> <code>bool</code> Returns true if the battery has gone below the threshold, false when the battery has returned above the threshold. Your automations will almost certainly want to examine this value and set/clear notifications or other indicators. <code>battery_type_and_quantity</code> <code>string</code> Battery type &amp; quantity. <code>battery_type</code> <code>string</code> Battery type. <code>battery_quantity</code> <code>int</code> Battery quantity. <code>battery_level</code> <code>int</code> Battery level % of the device. <code>previous_battery_level</code> <code>int</code> Previous battery level % of the device."},{"location":"events/#automation-example","title":"Automation Example","text":"<p>See others in the community contributions</p> <pre><code>alias: Battery Low Notification\ndescription: Battery Low Notification with auto dismiss\ntrigger:\n  - platform: event\n    event_type: battery_notes_battery_threshold\n    event_data:\n      battery_low: true\n    id: low\n    alias: Battery went low\n  - platform: event\n    event_type: battery_notes_battery_threshold\n    event_data:\n      battery_low: false\n    id: high\n    alias: Battery went high\ncondition: []\naction:\n  - choose:\n      - conditions:\n          - condition: trigger\n            id:\n              - low\n        sequence:\n          - service: persistent_notification.create\n            data:\n              title: |\n                {{ trigger.event.data.device_name }} Battery Low\n              notification_id: \"{{ trigger.event.data.device_id }}\"\n              message: &gt;\n                The device has a battery level of {{\n                trigger.event.data.battery_level }}% {{ '\\n' -}} You need {{\n                trigger.event.data.battery_quantity }}x {{\n                trigger.event.data.battery_type }}\n      - conditions:\n          - condition: trigger\n            id:\n              - high\n        sequence:\n          - service: persistent_notification.dismiss\n            data:\n              notification_id: \"{{ trigger.event.data.device_id }}\"\nmode: queued\n</code></pre>"},{"location":"events/#battery-increased","title":"Battery Increased","text":"<p><code>battery_notes_battery_increased</code></p> <p>This is fired when any device within Battery Notes has a battery level increased above the battery_increase_threshold (default 25%) if not changed within configuration setting.</p> <p>It deliberately does not update the battery_replaced sensor allowing you to choose how you want to handle this.  The increase theshold allows for detecting/handling of partially charged batteries rather than just full batteries. An example automation below shows how to update the battery_replaced.</p> Attribute Type Description <code>device_id</code> <code>string</code> The device id of the device. <code>device_name</code> <code>string</code> The device name. <code>battery_low</code> <code>bool</code> Returns true if the battery has gone below the threshold, false when the battery has returned above the threshold. <code>battery_type_and_quantity</code> <code>string</code> Battery type &amp; quantity. <code>battery_type</code> <code>string</code> Battery type. <code>battery_quantity</code> <code>int</code> Battery quantity. <code>battery_level</code> <code>int</code> Current battery level % of the device. <code>previous_battery_level</code> <code>int</code> Previous battery level % of the device."},{"location":"events/#automation-example_1","title":"Automation Example","text":"<p>See others in the community contributions</p> <pre><code>alias: Battery Replaced\ndescription: Battery Replaced\ntrigger:\n  - platform: event\n    event_type: battery_notes_battery_increased\ncondition: []\naction:\n  - service: battery_notes.set_battery_replaced\n    data:\n      device_id: \"{{ trigger.event.data.device_id }}\"\nmode: queued\n</code></pre>"},{"location":"faq/","title":"FAQ","text":"<ul> <li> <p>Does a device have to be in the library? No, you can always add a device manually by going to Settings -&gt; Integrations -&gt; Battery Notes screen add a new device where you can enter the battery details manually.</p> </li> <li> <p>Why is my device not being discovered? It could be missing from the library or does not exactly match the name that your integration has.  ZHA and Z2M for example have different manufacturers/models for the same device, you can still add it manually or contribute to the library.</p> </li> <li> <p>When is the library updated? It updates when Home Assistant is restarted and approximately every 24 hours after that. It will pull the latest devices that have been merged into the main branch, if you have recently submitted a pull request for a new device it will not appear until it has been manually reviewed and merged.</p> </li> <li> <p>How do I remove a battery note on a device? Go into the Settings -&gt; Integrations -&gt; Battery Notes, use the menu on the right of a device and select Delete, this will only delete the battery note, not the whole device.</p> </li> <li> <p>Why does the device icon change? Unfortunately where there are multiple integrations associated with a device Home Assistant seems to choose an icon at random, I have no control over this.</p> </li> <li> <p>Can I edit a battery note? Go into Settings -&gt; Integrations -&gt; Battery Notes and click Configure on the device you want to edit.</p> </li> <li> <p>Why am I only able to see some of my devices when adding manually? By default Battery Notes filters the device list to only devices with a battery, if you want to add a battery note to a random device then you can disable this filtering by adding the following configuration to your <code>configuration.yaml</code> and restart Home Assistant to see all devices. <pre><code>battery_notes:\n  show_all_devices: True\n</code></pre></p> </li> <li> <p>I only want to add notes to a few devices, can I disable auto discovery? If you want to disable this functionality you can add the following to your <code>configuration.yaml</code>, after a restart of Home Assistant you will not see discovered battery notes. <pre><code>battery_notes:\n  enable_autodiscovery: False\n</code></pre></p> </li> <li> <p>I don't want to track battery replacement, can I disable this? Yes, you can add the following to your <code>configuration.yaml</code>, after a restart of Home Assistant new devices added to battery notes will have the battery replaced sensor and button disabled.  Any devices you have previously added to Battery Notes you will have to disable/enable these sensors manually, which also means you can just enable specific sensors of important ones you want to track. <pre><code>battery_notes:\n  enable_replaced: False\n</code></pre></p> </li> <li> <p>How can I show my support? </p> </li> </ul>"},{"location":"library/","title":"Library","text":"<p>The library contains user contributed device definitions to allow discovery of the most popular devices. The library is updated when Home Assistant is restarted and approximately every 24 hours after that. It will pull the latest devices that have been merged into the main branch, if you have recently submitted a pull request for a new device it will not appear until it has been manually reviewed and merged.</p>"},{"location":"library/#contributing-to-the-library","title":"Contributing to the library","text":""},{"location":"library/#submit-definition-via-github-issues-form","title":"Submit Definition via GitHub Issues Form","text":"<p>Upon submission using the form above GitHub will attempt to make the required code changes automatically.</p>"},{"location":"library/#submit-definition-via-pull-request","title":"Submit Definition via Pull Request","text":"<p>Fork the repository, add your device details to the JSON document <code>custom_components/battery_notes/data/library.json</code>, and then submit a pull request. Do not enable GitHub Actions (disabled by default) as this will mess with the pull request and are unnecessary for a library submission.</p> <ul> <li>The manufacturer and model should be exactly what is displayed on the Device screen within Home Assistant.</li> <li>The make &amp; model names may be different between integrations such as Zigbee2MQTT and ZHA, if you see a similar device please duplicate the entry rather than changing it.</li> <li>Please keep devices in alphabetical order by manufacturer/model.</li> <li>The <code>battery_quantity</code> data is numeric (no quotes) and optional. If a device only requires a single battery, it should be omitted.</li> <li>The <code>battery_type</code> data should follow the most common naming for general batteries (ex. AAA, D) and the IEC naming for battery cells according to Wikipedia (ex. CR2032, 18650)</li> <li>If a device has a bespoke rechargeable battery you can use <code>\"battery_type\": \"Rechargeable\"</code></li> <li>For devices like smoke alarms where the battery is not replaceable you can use <code>\"battery_type\": \"Irreplaceable\"</code></li> <li>If a device shouldn't be discovered because there are multiple revisions with the same model number but different battery types it can be added to the library with a <code>\"battery_type\": \"MANUAL\"</code> to note it is a device that shouldn't have a battery definition added to the library to save removal/re-add because people don't realise there are variants.</li> </ul> <p>For the example image below, your JSON entry will look like this:</p> <pre><code>{\n    \"manufacturer\": \"Philips\",\n    \"model\": \"Hue motion sensor (9290012607)\",\n    \"battery_type\": \"AAA\",\n    \"battery_quantity\": 2\n},\n</code></pre> <p></p>"},{"location":"services/","title":"Services","text":""},{"location":"services/#battery_notesset_battery_replaced","title":"battery_notes.set_battery_replaced","text":"<p>For updating the battery replaced date. This allows you to change the date a battery was replaced.</p> <p>See how to use this service in the community contributions</p> Parameter Optional Description <code>data.device_id</code> <code>no</code> The device id that you want to change the battery replaced date for. <code>data.datetime_replaced</code> <code>yes</code> The optional datetime that you want to set the battery replaced to, if omitted the current date/time will be used."},{"location":"translations/","title":"Translations","text":"<p>You can help by adding missing translations when you are a native speaker. Or add a complete new language when there is no language file available.</p> <p>Battery Notes uses Crowdin to make contributing easy.</p>"},{"location":"translations/#changing-or-adding-to-existing-language","title":"Changing or adding to existing language","text":"<p>First register and join the translation project</p> <ul> <li>If you don\u2019t have a Crowdin account yet, create one at https://crowdin.com</li> <li>Go to the Battery Notes Crowdin project page</li> <li>Click Join.</li> </ul> <p>Next translate a string</p> <ul> <li>Select the language you want to contribute to from the dashboard.</li> <li>Click Translate All.</li> <li>Find the string you want to edit, missing translation are marked red.</li> <li>Fill in or modify the translation and click Save.</li> <li>Repeat for other translations.</li> </ul> <p>Info</p> <p>Battery Notes will automatically pull in latest changes to translations every day and create a Pull Request. After that is reviewed by a maintainer it will be included in the next release of Battery Notes.</p>"},{"location":"translations/#adding-a-new-language","title":"Adding a new language","text":"<p>Create an Issue requesting a new language. We will do the necessary work to add the new translation to the integration and Crowdin site, when it's ready for you to contribute we'll comment on the issue you raised.</p>"}]}